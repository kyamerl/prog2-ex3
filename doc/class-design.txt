//演習3_1
プレイヤーの初期位置をどう保存したら良いか？
（プレイヤーが迷路に入った際の初期位置であって、現在位置ではない。入り口と考えよう）
    sがプレイヤーの初期位置なのでそれを保存するリスト型変数を作成。


迷路サイズをどう保存したら良いか？
    3行目から最後の行までの行数と横の行数を掛けた値を保存するstr型変数を作成。


迷路情報をどう保存したら良いか？
    二次元配列を利用する。emptyと#をそれぞれ二進数に変更。

map.txtは一例である。同じ書式で記載された他迷路であっても同様に読み込めるようにするにはどうしたら良いか？
    1行目を別の変数に入れ、2行目をfor文での条件として、３行目以下を一つずつ取り出す。

アクセサ（getter/setter）は必要だろうか？
    setter : ゴールの位置情報

他に迷路クラスが果たすべき機能はなんだろうか？
    #と空白を判断する機能


//クラス名、フィールド変数、メソッド、コンストラクタ
マップクラス {
	List プレイヤーの初期位置[2], マップのサイズ[2], マップ[][];
	コンストラクタ{
	マップの初期化
	マップの読み込み -> 変数を用意 -> データ追加

}
セッター (ゴールの位置情報)
空白(=移動できるか)判断する機能
}


//演習3_2

クラス名、フィールド変数、メソッド、コンストラクタ
プレイヤークラス {
	int 歩数
	List 位置情報

	セッター (位置情報)
ゲッター (位置情報)
移動する機能
	プレイヤーの周りに壁があるかどうか調べる機能(マップクラスに聞く形で)。
	    *プレイヤーが移動する際に、マップクラスにemptyか#か調べさせる。
		現在位置情報の配列を変更する
}

コンストラクタ{
	プレイヤーの初期位置設定
}